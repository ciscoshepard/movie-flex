{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Container,Grid,Card,CardMedia,CardContent}from'@mui/material';import axios from'axios';import Hero from'../components/Hero';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Series=()=>{const[featuredShow,setFeaturedShow]=useState(null);const[dramaShows,setDramaShows]=useState([]);const[sciFiShows,setSciFiShows]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{// Récupérer les séries découverte pour le Hero\nconst discoverResponse=await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&sort_by=popularity.desc`);// Récupérer les séries dramatiques\nconst dramaResponse=await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=18`);// Récupérer les séries de science-fiction\nconst sciFiResponse=await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=10765`);const shows=discoverResponse.data.results;// Sélectionner une série aléatoire pour le Hero\nconst randomIndex=Math.floor(Math.random()*shows.length);setFeaturedShow(shows[randomIndex]);setDramaShows(dramaResponse.data.results.slice(0,8));setSciFiShows(sciFiResponse.data.results.slice(0,8));setLoading(false);}catch(error){console.error('Error fetching data:',error);setLoading(false);}};fetchData();},[]);// Fonction pour gérer le clic sur une carte\nconst navigate=useNavigate();const handleCardClick=(id,isMovie)=>{if(isMovie){navigate(`/movie/${id}`);}else{navigate(`/tv/${id}`);}};const renderMediaCards=(mediaList,isMovie)=>{return/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:mediaList.map(media=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Card,{sx:{height:'100%',display:'flex',flexDirection:'column',transition:'transform 0.3s, box-shadow 0.3s','&:hover':{transform:'scale(1.05)',boxShadow:'0 10px 20px rgba(0,0,0,0.2)',cursor:'pointer'}},onClick:()=>handleCardClick(media.id,isMovie),children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"260\",sx:{objectFit:'cover'},image:media.poster_path?`https://image.tmdb.org/t/p/w500${media.poster_path}`:'https://via.placeholder.com/500x750?text=No+Image',alt:isMovie?media.title:media.name}),/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",component:\"div\",noWrap:true,children:isMovie?media.title:media.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:isMovie?media.release_date&&new Date(media.release_date).getFullYear():media.first_air_date&&new Date(media.first_air_date).getFullYear()})]})]})},media.id))});};if(loading||!featuredShow){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:\"Chargement...\"});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Hero,{title:featuredShow.name,backdrop_path:featuredShow.backdrop_path,overview:featuredShow.overview,release_date:featuredShow.first_air_date,origin_country:featuredShow.origin_country,popularity:featuredShow.popularity,adult:false,seasons:featuredShow.number_of_seasons||1,isMovie:false}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{py:5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3},children:\"S\\xE9ries dramatiques\"}),renderMediaCards(dramaShows,false),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{my:3},children:\"S\\xE9ries de science-fiction\"}),renderMediaCards(sciFiShows,false)]})]});};export default Series;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Container","Grid","Card","CardMedia","CardContent","axios","Hero","useNavigate","jsx","_jsx","jsxs","_jsxs","Series","featuredShow","setFeaturedShow","dramaShows","setDramaShows","sciFiShows","setSciFiShows","loading","setLoading","fetchData","discoverResponse","get","process","env","REACT_APP_TMDB_API_KEY","dramaResponse","sciFiResponse","shows","data","results","randomIndex","Math","floor","random","length","slice","error","console","navigate","handleCardClick","id","isMovie","renderMediaCards","mediaList","container","spacing","children","map","media","item","xs","sm","md","sx","height","display","flexDirection","transition","transform","boxShadow","cursor","onClick","component","objectFit","image","poster_path","alt","title","name","flexGrow","gutterBottom","variant","noWrap","color","release_date","Date","getFullYear","first_air_date","justifyContent","p","backdrop_path","overview","origin_country","popularity","adult","seasons","number_of_seasons","maxWidth","py","mb","my"],"sources":["C:/Users/franc/Html_App/movie-flex-v1/src/pages/Series.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Container, Grid, Card, CardMedia, CardContent } from '@mui/material';\r\nimport axios from 'axios';\r\nimport Hero from '../components/Hero';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Series: React.FC = () => {\r\n  const [featuredShow, setFeaturedShow] = useState<any>(null);\r\n  const [dramaShows, setDramaShows] = useState<any[]>([]);\r\n  const [sciFiShows, setSciFiShows] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Récupérer les séries découverte pour le Hero\r\n        const discoverResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&sort_by=popularity.desc`\r\n        );\r\n        \r\n        // Récupérer les séries dramatiques\r\n        const dramaResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=18`\r\n        );\r\n        \r\n        // Récupérer les séries de science-fiction\r\n        const sciFiResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=10765`\r\n        );\r\n        \r\n        const shows = discoverResponse.data.results;\r\n        // Sélectionner une série aléatoire pour le Hero\r\n        const randomIndex = Math.floor(Math.random() * shows.length);\r\n        \r\n        setFeaturedShow(shows[randomIndex]);\r\n        setDramaShows(dramaResponse.data.results.slice(0, 8));\r\n        setSciFiShows(sciFiResponse.data.results.slice(0, 8));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fonction pour gérer le clic sur une carte\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardClick = (id: number, isMovie: boolean) => {\r\n    if (isMovie) {\r\n      navigate(`/movie/${id}`);\r\n    } else {\r\n      navigate(`/tv/${id}`);\r\n    }\r\n  };\r\n\r\n  const renderMediaCards = (mediaList: any[], isMovie: boolean) => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        {mediaList.map((media) => (\r\n          <Grid item key={media.id} xs={12} sm={6} md={3}>\r\n            <Card \r\n              sx={{ \r\n                height: '100%', \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                transition: 'transform 0.3s, box-shadow 0.3s',\r\n                '&:hover': {\r\n                  transform: 'scale(1.05)',\r\n                  boxShadow: '0 10px 20px rgba(0,0,0,0.2)',\r\n                  cursor: 'pointer'\r\n                }\r\n              }}\r\n              onClick={() => handleCardClick(media.id, isMovie)}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"260\"\r\n                sx={{ objectFit: 'cover' }}\r\n                image={\r\n                  media.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${media.poster_path}`\r\n                    : 'https://via.placeholder.com/500x750?text=No+Image'\r\n                }\r\n                alt={isMovie ? media.title : media.name}\r\n              />\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n                  {isMovie ? media.title : media.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {isMovie \r\n                    ? media.release_date && new Date(media.release_date).getFullYear() \r\n                    : media.first_air_date && new Date(media.first_air_date).getFullYear()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  if (loading || !featuredShow) {\r\n    return <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>Chargement...</Box>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Hero\r\n        title={featuredShow.name}\r\n        backdrop_path={featuredShow.backdrop_path}\r\n        overview={featuredShow.overview}\r\n        release_date={featuredShow.first_air_date}\r\n        origin_country={featuredShow.origin_country}\r\n        popularity={featuredShow.popularity}\r\n        adult={false}\r\n        seasons={featuredShow.number_of_seasons || 1}\r\n        isMovie={false}\r\n      />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Séries dramatiques</Typography>\r\n        {renderMediaCards(dramaShows, false)}\r\n        \r\n        <Typography variant=\"h4\" sx={{ my: 3 }}>Séries de science-fiction</Typography>\r\n        {renderMediaCards(sciFiShows, false)}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}