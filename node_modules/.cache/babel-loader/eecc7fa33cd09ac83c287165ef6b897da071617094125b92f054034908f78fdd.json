{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Container,Grid,Card,CardMedia,CardContent}from'@mui/material';import{useNavigate}from'react-router-dom';import axios from'axios';import Hero from'../components/Hero';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Movies=()=>{const[featuredMovie,setFeaturedMovie]=useState(null);const[actionMovies,setActionMovies]=useState([]);const[comedyMovies,setComedyMovies]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchDiscoverMovies=async()=>{try{// Films populaires pour le hero\nconst discoverResponse=await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&sort_by=popularity.desc`);// Films d'action (genre_id=28)\nconst actionResponse=await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=28`);// Films de comédie (genre_id=35)\nconst comedyResponse=await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=35`);const movies=discoverResponse.data.results;const randomIndex=Math.floor(Math.random()*movies.length);setFeaturedMovie(movies[randomIndex]);setActionMovies(actionResponse.data.results.slice(0,8));setComedyMovies(comedyResponse.data.results.slice(0,8));setLoading(false);}catch(error){console.error('Error fetching discover movies:',error);setLoading(false);}};fetchDiscoverMovies();},[]);// Fonction pour gérer le clic sur une carte\nconst navigate=useNavigate();const handleCardClick=(id,isMovie)=>{if(isMovie){navigate(`/movie/${id}`);}else{navigate(`/tv/${id}`);}};const renderMediaCards=(mediaList,isMovie)=>{return/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:mediaList.map(media=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsxs(Card,{sx:{height:'100%',display:'flex',flexDirection:'column',transition:'transform 0.3s, box-shadow 0.3s','&:hover':{transform:'scale(1.05)',boxShadow:'0 10px 20px rgba(0,0,0,0.2)',cursor:'pointer'}},onClick:()=>handleCardClick(media.id,isMovie),children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"260\",sx:{objectFit:'cover'},image:media.poster_path?`https://image.tmdb.org/t/p/w500${media.poster_path}`:'https://via.placeholder.com/500x750?text=No+Image',alt:media.title}),/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",component:\"div\",noWrap:true,children:media.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:media.release_date&&new Date(media.release_date).getFullYear()})]})]})},media.id))});};if(loading||!featuredMovie){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:\"Chargement...\"});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Hero,{title:featuredMovie.title,backdrop_path:featuredMovie.backdrop_path,overview:featuredMovie.overview,release_date:featuredMovie.release_date,origin_country:['FR'],popularity:featuredMovie.popularity,adult:featuredMovie.adult,isMovie:true}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{py:5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3},children:\"Films d'action\"}),renderMediaCards(actionMovies,true),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{my:3},children:\"Films de com\\xE9die\"}),renderMediaCards(comedyMovies,true)]})]});};export default Movies;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Container","Grid","Card","CardMedia","CardContent","useNavigate","axios","Hero","jsx","_jsx","jsxs","_jsxs","Movies","featuredMovie","setFeaturedMovie","actionMovies","setActionMovies","comedyMovies","setComedyMovies","loading","setLoading","fetchDiscoverMovies","discoverResponse","get","process","env","REACT_APP_TMDB_API_KEY","actionResponse","comedyResponse","movies","data","results","randomIndex","Math","floor","random","length","slice","error","console","navigate","handleCardClick","id","isMovie","renderMediaCards","mediaList","container","spacing","children","map","media","item","xs","sm","md","sx","height","display","flexDirection","transition","transform","boxShadow","cursor","onClick","component","objectFit","image","poster_path","alt","title","flexGrow","gutterBottom","variant","noWrap","color","release_date","Date","getFullYear","justifyContent","p","backdrop_path","overview","origin_country","popularity","adult","maxWidth","py","mb","my"],"sources":["C:/Users/franc/Html_App/movie-flex-v1/src/pages/Movies.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Container, Grid, Card, CardMedia, CardContent } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Hero from '../components/Hero';\r\n\r\nconst Movies: React.FC = () => {\r\n  const [featuredMovie, setFeaturedMovie] = useState<any>(null);\r\n  const [actionMovies, setActionMovies] = useState<any[]>([]);\r\n  const [comedyMovies, setComedyMovies] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDiscoverMovies = async () => {\r\n      try {\r\n        // Films populaires pour le hero\r\n        const discoverResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&sort_by=popularity.desc`\r\n        );\r\n        \r\n        // Films d'action (genre_id=28)\r\n        const actionResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=28`\r\n        );\r\n        \r\n        // Films de comédie (genre_id=35)\r\n        const comedyResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR&with_genres=35`\r\n        );\r\n        \r\n        const movies = discoverResponse.data.results;\r\n        const randomIndex = Math.floor(Math.random() * movies.length);\r\n        \r\n        setFeaturedMovie(movies[randomIndex]);\r\n        setActionMovies(actionResponse.data.results.slice(0, 8));\r\n        setComedyMovies(comedyResponse.data.results.slice(0, 8));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching discover movies:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDiscoverMovies();\r\n  }, []);\r\n\r\n  // Fonction pour gérer le clic sur une carte\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardClick = (id: number, isMovie: boolean) => {\r\n    if (isMovie) {\r\n      navigate(`/movie/${id}`);\r\n    } else {\r\n      navigate(`/tv/${id}`);\r\n    }\r\n  };\r\n\r\n  const renderMediaCards = (mediaList: any[], isMovie: boolean) => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        {mediaList.map((media) => (\r\n          <Grid item key={media.id} xs={12} sm={6} md={3}>\r\n            <Card \r\n              sx={{ \r\n                height: '100%', \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                transition: 'transform 0.3s, box-shadow 0.3s',\r\n                '&:hover': {\r\n                  transform: 'scale(1.05)',\r\n                  boxShadow: '0 10px 20px rgba(0,0,0,0.2)',\r\n                  cursor: 'pointer'\r\n                }\r\n              }}\r\n              onClick={() => handleCardClick(media.id, isMovie)}\r\n            >\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"260\"\r\n                sx={{ objectFit: 'cover' }}\r\n                image={\r\n                  media.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${media.poster_path}`\r\n                    : 'https://via.placeholder.com/500x750?text=No+Image'\r\n                }\r\n                alt={media.title}\r\n              />\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n                  {media.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {media.release_date && new Date(media.release_date).getFullYear()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  if (loading || !featuredMovie) {\r\n    return <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>Chargement...</Box>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Hero\r\n        title={featuredMovie.title}\r\n        backdrop_path={featuredMovie.backdrop_path}\r\n        overview={featuredMovie.overview}\r\n        release_date={featuredMovie.release_date}\r\n        origin_country={['FR']}\r\n        popularity={featuredMovie.popularity}\r\n        adult={featuredMovie.adult}\r\n        isMovie={true}\r\n      />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Films d'action</Typography>\r\n        {renderMediaCards(actionMovies, true)}\r\n        \r\n        <Typography variant=\"h4\" sx={{ my: 3 }}>Films de comédie</Typography>\r\n        {renderMediaCards(comedyMovies, true)}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Movies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}