{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Html_App\\\\movie-flex-v1\\\\src\\\\pages\\\\TvDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Button, Chip, Grid, Card, CardMedia, CardContent, IconButton, Paper, List, ListItem, Avatar, ListItemAvatar, ListItemText, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TvDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [show, setShow] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [crew, setCrew] = useState([]);\n  const [trailer, setTrailer] = useState(null);\n  const [seasons, setSeasons] = useState([]);\n  const [expandedSeason, setExpandedSeason] = useState(null);\n  const [episodes, setEpisodes] = useState({});\n  const [showTrailer, setShowTrailer] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTvDetails = async () => {\n      try {\n        // Récupérer les détails de la série\n        const showResponse = await axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);\n\n        // Récupérer le casting et l'équipe\n        const creditsResponse = await axios.get(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);\n\n        // Récupérer les vidéos (bande-annonce)\n        const videosResponse = await axios.get(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);\n        setShow(showResponse.data);\n        setSeasons(showResponse.data.seasons.filter(s => s.season_number > 0));\n        setCast(creditsResponse.data.cast.slice(0, 10)); // Limiter à 10 acteurs\n\n        // Filtrer pour obtenir les créateurs, producteurs, scénaristes\n        const creators = showResponse.data.created_by || [];\n        const writers = creditsResponse.data.crew.filter(member => member.department === \"Writing\" || member.job === \"Writer\");\n        const directors = creditsResponse.data.crew.filter(member => member.job === \"Director\" || member.department === \"Directing\");\n        const producers = creditsResponse.data.crew.filter(member => member.job === \"Producer\" || member.job === \"Executive Producer\");\n\n        // Combine and deduplicate crew members\n        const uniqueCrewIds = new Set();\n        const uniqueCrew = [...creators, ...directors.slice(0, 2), ...writers.slice(0, 2), ...producers.slice(0, 2)].filter(member => {\n          if (uniqueCrewIds.has(member.id)) return false;\n          uniqueCrewIds.add(member.id);\n          return true;\n        });\n        setCrew(uniqueCrew);\n\n        // Récupérer la bande-annonce\n        const trailers = videosResponse.data.results.filter(video => video.type === \"Trailer\" && (video.site === \"YouTube\" || video.site === \"Vimeo\"));\n        if (trailers.length > 0) {\n          setTrailer(trailers[0].key);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching TV show details:', error);\n        setLoading(false);\n      }\n    };\n    fetchTvDetails();\n  }, [id]);\n  const fetchSeasonEpisodes = async seasonNumber => {\n    if (episodes[seasonNumber]) {\n      return; // Déjà chargé\n    }\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);\n      setEpisodes(prev => ({\n        ...prev,\n        [seasonNumber]: response.data.episodes\n      }));\n    } catch (error) {\n      console.error(`Error fetching season ${seasonNumber} episodes:`, error);\n    }\n  };\n  const handleSeasonClick = seasonNumber => {\n    if (expandedSeason === seasonNumber) {\n      setExpandedSeason(null); // Ferme l'accordéon si déjà ouvert\n    } else {\n      setExpandedSeason(seasonNumber);\n      fetchSeasonEpisodes(seasonNumber);\n    }\n  };\n  const handleClose = () => {\n    navigate(-1);\n  };\n  const handleTrailerClick = () => {\n    setShowTrailer(true);\n  };\n  if (loading || !show) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 5\n      },\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        height: '50vh',\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8)), url(https://image.tmdb.org/t/p/original${show.backdrop_path})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClose,\n          sx: {\n            position: 'absolute',\n            top: 16,\n            right: 16,\n            color: 'white',\n            bgcolor: 'rgba(0,0,0,0.5)',\n            '&:hover': {\n              bgcolor: 'rgba(255,255,255,0.2)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500${show.poster_path}`,\n              alt: show.name,\n              style: {\n                width: '100%',\n                maxWidth: '300px',\n                borderRadius: '8px',\n                boxShadow: '0 8px 16px rgba(0,0,0,0.3)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              sx: {\n                color: 'white',\n                mb: 2\n              },\n              children: show.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1,\n                mb: 3\n              },\n              children: [show.genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n                label: genre.name,\n                size: \"small\"\n              }, genre.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${show.number_of_seasons} saison${show.number_of_seasons > 1 ? 's' : ''}`,\n                size: \"small\",\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: new Date(show.first_air_date).getFullYear(),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${Math.round(show.vote_average * 10) / 10}/10`,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                color: 'white',\n                mb: 3\n              },\n              children: show.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), trailer && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 30\n              }, this),\n              onClick: handleTrailerClick,\n              size: \"large\",\n              sx: {\n                mb: 2\n              },\n              children: \"BANDE ANNONCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 5\n      },\n      children: [showTrailer && trailer && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 5,\n          position: 'relative',\n          paddingTop: '56.25%',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            borderRadius: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setShowTrailer(false),\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              zIndex: 2,\n              color: 'white',\n              bgcolor: 'rgba(0,0,0,0.6)',\n              '&:hover': {\n                bgcolor: 'rgba(0,0,0,0.8)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"100%\",\n            height: \"100%\",\n            src: `https://www.youtube.com/embed/${trailer}?autoplay=1`,\n            title: \"YouTube video player\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3\n        },\n        children: \"Saisons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 5\n        },\n        children: seasons.map(season => /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: expandedSeason === season.season_number,\n          onChange: () => handleSeasonClick(season.season_number),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this),\n            \"aria-controls\": `season${season.season_number}-content`,\n            id: `season${season.season_number}-header`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: season.poster_path ? `https://image.tmdb.org/t/p/w92${season.poster_path}` : 'https://via.placeholder.com/92x138?text=No+Image',\n                alt: season.name,\n                style: {\n                  width: '46px',\n                  borderRadius: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: season.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [season.episode_count, \" \\xE9pisode\", season.episode_count > 1 ? 's' : '', \" \\u2022 \", season.air_date && new Date(season.air_date).getFullYear()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: episodes[season.season_number] ? episodes[season.season_number].map(episode => /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                sx: {\n                  mb: 2,\n                  borderBottom: '1px solid rgba(0,0,0,0.1)',\n                  pb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 3,\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: episode.still_path ? `https://image.tmdb.org/t/p/w300${episode.still_path}` : 'https://via.placeholder.com/300x170?text=No+Image',\n                      alt: episode.name,\n                      style: {\n                        width: '100%',\n                        borderRadius: '4px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 9,\n                    md: 10,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      children: [episode.episode_number, \". \", episode.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      sx: {\n                        mb: 1\n                      },\n                      children: [episode.runtime ? `${episode.runtime} min • ` : '', new Date(episode.air_date).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: episode.overview || \"Aucun synopsis disponible.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this)\n              }, episode.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Chargement des \\xE9pisodes...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, season.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3\n        },\n        children: \"Casting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 5\n        },\n        children: cast.map(actor => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          md: 3,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"180\",\n              image: actor.profile_path ? `https://image.tmdb.org/t/p/w185${actor.profile_path}` : 'https://via.placeholder.com/185x278?text=No+Image',\n              alt: actor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                component: \"div\",\n                children: actor.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: actor.character\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)\n        }, actor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3\n        },\n        children: \"Cr\\xE9ateurs et R\\xE9alisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: crew.map(member => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: member.profile_path ? `https://image.tmdb.org/t/p/w45${member.profile_path}` : undefined\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: member.name,\n            secondary: member.job || 'Créateur'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, `${member.id}-${member.job || 'Creator'}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(TvDetail, \"mXOS5QO/D6BArF2l7T0Z492vy2A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TvDetail;\nexport default TvDetail;\nvar _c;\n$RefreshReg$(_c, \"TvDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Container","Typography","Button","Chip","Grid","Card","CardMedia","CardContent","IconButton","Paper","List","ListItem","Avatar","ListItemAvatar","ListItemText","Accordion","AccordionSummary","AccordionDetails","CloseIcon","PlayArrowIcon","ExpandMoreIcon","axios","jsxDEV","_jsxDEV","TvDetail","_s","id","navigate","show","setShow","cast","setCast","crew","setCrew","trailer","setTrailer","seasons","setSeasons","expandedSeason","setExpandedSeason","episodes","setEpisodes","showTrailer","setShowTrailer","loading","setLoading","fetchTvDetails","showResponse","get","process","env","REACT_APP_TMDB_API_KEY","creditsResponse","videosResponse","data","filter","s","season_number","slice","creators","created_by","writers","member","department","job","directors","producers","uniqueCrewIds","Set","uniqueCrew","has","add","trailers","results","video","type","site","length","key","error","console","fetchSeasonEpisodes","seasonNumber","response","prev","handleSeasonClick","handleClose","handleTrailerClick","sx","display","justifyContent","p","children","fileName","_jsxFileName","lineNumber","columnNumber","position","height","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","alignItems","maxWidth","onClick","top","right","color","bgcolor","container","spacing","item","xs","md","src","poster_path","alt","name","style","width","borderRadius","boxShadow","variant","mb","flexWrap","gap","genres","map","genre","label","size","number_of_seasons","Date","first_air_date","getFullYear","Math","round","vote_average","overview","startIcon","py","paddingTop","elevation","left","overflow","zIndex","title","frameBorder","allow","allowFullScreen","season","expanded","onChange","expandIcon","episode_count","air_date","episode","borderBottom","pb","sm","still_path","episode_number","runtime","toLocaleDateString","actor","lg","component","image","profile_path","character","undefined","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/franc/Html_App/movie-flex-v1/src/pages/TvDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box, Container, Typography, Button, Chip, Grid, Card, CardMedia, \r\n  CardContent, Divider, IconButton, Paper, List, ListItem, Avatar, \r\n  ListItemAvatar, ListItemText, Accordion, AccordionSummary, AccordionDetails\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport axios from 'axios';\r\n\r\nconst TvDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = useState<any>(null);\r\n  const [cast, setCast] = useState<any[]>([]);\r\n  const [crew, setCrew] = useState<any[]>([]);\r\n  const [trailer, setTrailer] = useState<string | null>(null);\r\n  const [seasons, setSeasons] = useState<any[]>([]);\r\n  const [expandedSeason, setExpandedSeason] = useState<number | null>(null);\r\n  const [episodes, setEpisodes] = useState<{ [key: number]: any[] }>({});\r\n  const [showTrailer, setShowTrailer] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTvDetails = async () => {\r\n      try {\r\n        // Récupérer les détails de la série\r\n        const showResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        // Récupérer le casting et l'équipe\r\n        const creditsResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        // Récupérer les vidéos (bande-annonce)\r\n        const videosResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        setShow(showResponse.data);\r\n        setSeasons(showResponse.data.seasons.filter((s: any) => s.season_number > 0));\r\n        setCast(creditsResponse.data.cast.slice(0, 10)); // Limiter à 10 acteurs\r\n        \r\n        // Filtrer pour obtenir les créateurs, producteurs, scénaristes\r\n        const creators = showResponse.data.created_by || [];\r\n        const writers = creditsResponse.data.crew.filter((member: any) => \r\n          member.department === \"Writing\" || member.job === \"Writer\"\r\n        );\r\n        const directors = creditsResponse.data.crew.filter((member: any) => \r\n          member.job === \"Director\" || member.department === \"Directing\"\r\n        );\r\n        const producers = creditsResponse.data.crew.filter((member: any) => \r\n          member.job === \"Producer\" || member.job === \"Executive Producer\"\r\n        );\r\n        \r\n        // Combine and deduplicate crew members\r\n        const uniqueCrewIds = new Set();\r\n        const uniqueCrew = [...creators, ...directors.slice(0, 2), ...writers.slice(0, 2), ...producers.slice(0, 2)]\r\n          .filter(member => {\r\n            if (uniqueCrewIds.has(member.id)) return false;\r\n            uniqueCrewIds.add(member.id);\r\n            return true;\r\n          });\r\n        \r\n        setCrew(uniqueCrew);\r\n        \r\n        // Récupérer la bande-annonce\r\n        const trailers = videosResponse.data.results.filter((video: any) => \r\n          video.type === \"Trailer\" && (video.site === \"YouTube\" || video.site === \"Vimeo\")\r\n        );\r\n        \r\n        if (trailers.length > 0) {\r\n          setTrailer(trailers[0].key);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching TV show details:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTvDetails();\r\n  }, [id]);\r\n  \r\n\r\n  const fetchSeasonEpisodes = async (seasonNumber: number) => {\r\n    if (episodes[seasonNumber]) {\r\n      return; // Déjà chargé\r\n    }\r\n    \r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n      );\r\n      \r\n      setEpisodes(prev => ({\r\n        ...prev,\r\n        [seasonNumber]: response.data.episodes\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error fetching season ${seasonNumber} episodes:`, error);\r\n    }\r\n  };\r\n  \r\n  const handleSeasonClick = (seasonNumber: number) => {\r\n    if (expandedSeason === seasonNumber) {\r\n      setExpandedSeason(null); // Ferme l'accordéon si déjà ouvert\r\n    } else {\r\n      setExpandedSeason(seasonNumber);\r\n      fetchSeasonEpisodes(seasonNumber);\r\n    }\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    navigate(-1);\r\n  };\r\n  \r\n  const handleTrailerClick = () => {\r\n    setShowTrailer(true);\r\n  };\r\n  \r\n  if (loading || !show) {\r\n    return <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>Chargement...</Box>;\r\n  }\r\n  \r\n  return (\r\n    <Box>\r\n      {/* En-tête avec image de fond */}\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          height: '50vh',\r\n          backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8)), url(https://image.tmdb.org/t/p/original${show.backdrop_path})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <IconButton \r\n            onClick={handleClose}\r\n            sx={{ \r\n              position: 'absolute', \r\n              top: 16, \r\n              right: 16, \r\n              color: 'white',\r\n              bgcolor: 'rgba(0,0,0,0.5)',\r\n              '&:hover': { bgcolor: 'rgba(255,255,255,0.2)' }\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          \r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={4}>\r\n              <img \r\n                src={`https://image.tmdb.org/t/p/w500${show.poster_path}`}\r\n                alt={show.name}\r\n                style={{ \r\n                  width: '100%', \r\n                  maxWidth: '300px',\r\n                  borderRadius: '8px',\r\n                  boxShadow: '0 8px 16px rgba(0,0,0,0.3)'\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={8}>\r\n              <Typography variant=\"h3\" sx={{ color: 'white', mb: 2 }}>\r\n                {show.name}\r\n              </Typography>\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                {show.genres.map((genre: any) => (\r\n                  <Chip key={genre.id} label={genre.name} size=\"small\" />\r\n                ))}\r\n                <Chip label={`${show.number_of_seasons} saison${show.number_of_seasons > 1 ? 's' : ''}`} size=\"small\" color=\"success\" />\r\n                <Chip label={new Date(show.first_air_date).getFullYear()} size=\"small\" />\r\n                <Chip label={`${Math.round(show.vote_average * 10) / 10}/10`} color=\"primary\" size=\"small\" />\r\n              </Box>\r\n              \r\n              <Typography variant=\"body1\" sx={{ color: 'white', mb: 3 }}>\r\n                {show.overview}\r\n              </Typography>\r\n              \r\n              {trailer && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  startIcon={<PlayArrowIcon />}\r\n                  onClick={handleTrailerClick}\r\n                  size=\"large\"\r\n                  sx={{ mb: 2 }}\r\n                >\r\n                  BANDE ANNONCE\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\r\n        {/* Affichage du trailer */}\r\n        {showTrailer && trailer && (\r\n          <Box sx={{ mb: 5, position: 'relative', paddingTop: '56.25%', width: '100%' }}>\r\n            <Paper \r\n              elevation={3} \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                width: '100%', \r\n                height: '100%',\r\n                overflow: 'hidden',\r\n                borderRadius: 2\r\n              }}\r\n            >\r\n              <IconButton \r\n                onClick={() => setShowTrailer(false)}\r\n                sx={{ \r\n                  position: 'absolute', \r\n                  top: 8, \r\n                  right: 8, \r\n                  zIndex: 2,\r\n                  color: 'white',\r\n                  bgcolor: 'rgba(0,0,0,0.6)',\r\n                  '&:hover': { bgcolor: 'rgba(0,0,0,0.8)' }\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <iframe\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                src={`https://www.youtube.com/embed/${trailer}?autoplay=1`}\r\n                title=\"YouTube video player\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                style={{ position: 'absolute', top: 0, left: 0 }}\r\n              />\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Saisons */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Saisons</Typography>\r\n        <Box sx={{ mb: 5 }}>\r\n          {seasons.map((season) => (\r\n            <Accordion \r\n              key={season.id}\r\n              expanded={expandedSeason === season.season_number}\r\n              onChange={() => handleSeasonClick(season.season_number)}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={`season${season.season_number}-content`}\r\n                id={`season${season.season_number}-header`}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                  <img \r\n                    src={\r\n                      season.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w92${season.poster_path}`\r\n                        : 'https://via.placeholder.com/92x138?text=No+Image'\r\n                    }\r\n                    alt={season.name}\r\n                    style={{ width: '46px', borderRadius: '4px' }}\r\n                  />\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\">{season.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {season.episode_count} épisode{season.episode_count > 1 ? 's' : ''} • {season.air_date && new Date(season.air_date).getFullYear()}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  {episodes[season.season_number] ? (\r\n                    episodes[season.season_number].map((episode) => (\r\n                      <ListItem key={episode.id} alignItems=\"flex-start\" sx={{ mb: 2, borderBottom: '1px solid rgba(0,0,0,0.1)', pb: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={3} md={2}>\r\n                            <img \r\n                              src={\r\n                                episode.still_path\r\n                                  ? `https://image.tmdb.org/t/p/w300${episode.still_path}`\r\n                                  : 'https://via.placeholder.com/300x170?text=No+Image'\r\n                              }\r\n                              alt={episode.name}\r\n                              style={{ width: '100%', borderRadius: '4px' }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={9} md={10}>\r\n                            <Typography variant=\"subtitle1\">\r\n                              {episode.episode_number}. {episode.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                              {episode.runtime ? `${episode.runtime} min • ` : ''}{new Date(episode.air_date).toLocaleDateString()}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              {episode.overview || \"Aucun synopsis disponible.\"}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                    ))\r\n                  ) : (\r\n                    <ListItem>\r\n                      <Typography>Chargement des épisodes...</Typography>\r\n                    </ListItem>\r\n                  )}\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Box>\r\n        \r\n        {/* Casting */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Casting</Typography>\r\n        <Grid container spacing={2} sx={{ mb: 5 }}>\r\n          {cast.map((actor) => (\r\n            <Grid item key={actor.id} xs={6} sm={4} md={3} lg={2}>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"180\"\r\n                  image={\r\n                    actor.profile_path\r\n                      ? `https://image.tmdb.org/t/p/w185${actor.profile_path}`\r\n                      : 'https://via.placeholder.com/185x278?text=No+Image'\r\n                  }\r\n                  alt={actor.name}\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle2\" component=\"div\">\r\n                    {actor.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {actor.character}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        \r\n        {/* Équipe de réalisation */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Créateurs et Réalisation</Typography>\r\n        <List>\r\n          {crew.map((member) => (\r\n            <ListItem key={`${member.id}-${member.job || 'Creator'}`}>\r\n              <ListItemAvatar>\r\n                <Avatar \r\n                  src={\r\n                    member.profile_path\r\n                      ? `https://image.tmdb.org/t/p/w45${member.profile_path}`\r\n                      : undefined\r\n                  }\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText \r\n                primary={member.name}\r\n                secondary={member.job || 'Créateur'}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TvDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}