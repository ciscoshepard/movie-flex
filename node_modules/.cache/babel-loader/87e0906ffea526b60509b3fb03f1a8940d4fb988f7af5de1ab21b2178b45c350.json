{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{Box,Container,Typography,Button,Chip,Grid,Card,CardMedia,CardContent,IconButton,Paper,List,ListItem,Avatar,ListItemAvatar,ListItemText,Accordion,AccordionSummary,AccordionDetails}from'@mui/material';import CloseIcon from'@mui/icons-material/Close';import PlayArrowIcon from'@mui/icons-material/PlayArrow';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TvDetail=()=>{const{id}=useParams();const navigate=useNavigate();const[show,setShow]=useState(null);const[cast,setCast]=useState([]);const[crew,setCrew]=useState([]);const[trailer,setTrailer]=useState(null);const[seasons,setSeasons]=useState([]);const[expandedSeason,setExpandedSeason]=useState(null);const[episodes,setEpisodes]=useState({});const[showTrailer,setShowTrailer]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchTvDetails=async()=>{try{// Récupérer les détails de la série\nconst showResponse=await axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);// Récupérer le casting et l'équipe\nconst creditsResponse=await axios.get(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);// Récupérer les vidéos (bande-annonce)\nconst videosResponse=await axios.get(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);setShow(showResponse.data);setSeasons(showResponse.data.seasons.filter(s=>s.season_number>0));setCast(creditsResponse.data.cast.slice(0,10));// Limiter à 10 acteurs\n// Filtrer pour obtenir les créateurs, producteurs, scénaristes\nconst creators=showResponse.data.created_by||[];const writers=creditsResponse.data.crew.filter(member=>member.department===\"Writing\"||member.job===\"Writer\");const directors=creditsResponse.data.crew.filter(member=>member.job===\"Director\"||member.department===\"Directing\");const producers=creditsResponse.data.crew.filter(member=>member.job===\"Producer\"||member.job===\"Executive Producer\");// Combine and deduplicate crew members\nconst uniqueCrewIds=new Set();const uniqueCrew=[...creators,...directors.slice(0,2),...writers.slice(0,2),...producers.slice(0,2)].filter(member=>{if(uniqueCrewIds.has(member.id))return false;uniqueCrewIds.add(member.id);return true;});setCrew(uniqueCrew);// Récupérer la bande-annonce\nconst trailers=videosResponse.data.results.filter(video=>video.type===\"Trailer\"&&(video.site===\"YouTube\"||video.site===\"Vimeo\"));if(trailers.length>0){setTrailer(trailers[0].key);}setLoading(false);}catch(error){console.error('Error fetching TV show details:',error);setLoading(false);}};fetchTvDetails();},[id]);const fetchSeasonEpisodes=async seasonNumber=>{if(episodes[seasonNumber]){return;// Déjà chargé\n}try{const response=await axios.get(`https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);setEpisodes(prev=>({...prev,[seasonNumber]:response.data.episodes}));}catch(error){console.error(`Error fetching season ${seasonNumber} episodes:`,error);}};const handleSeasonClick=seasonNumber=>{if(expandedSeason===seasonNumber){setExpandedSeason(null);// Ferme l'accordéon si déjà ouvert\n}else{setExpandedSeason(seasonNumber);fetchSeasonEpisodes(seasonNumber);}};const handleClose=()=>{navigate(-1);};const handleTrailerClick=()=>{setShowTrailer(true);};if(loading||!show){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:5},children:\"Chargement...\"});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Box,{sx:{position:'relative',height:'50vh',backgroundImage:`linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8)), url(https://image.tmdb.org/t/p/original${show.backdrop_path})`,backgroundSize:'cover',backgroundPosition:'center',display:'flex',alignItems:'center'},children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(IconButton,{onClick:handleClose,sx:{position:'absolute',top:16,right:16,color:'white',bgcolor:'rgba(0,0,0,0.5)','&:hover':{bgcolor:'rgba(255,255,255,0.2)'}},children:/*#__PURE__*/_jsx(CloseIcon,{})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(\"img\",{src:`https://image.tmdb.org/t/p/w500${show.poster_path}`,alt:show.name,style:{width:'100%',maxWidth:'300px',borderRadius:'8px',boxShadow:'0 8px 16px rgba(0,0,0,0.3)'}})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:8,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",sx:{color:'white',mb:2},children:show.name}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mb:3},children:[show.genres.map(genre=>/*#__PURE__*/_jsx(Chip,{label:genre.name,size:\"small\"},genre.id)),/*#__PURE__*/_jsx(Chip,{label:`${show.number_of_seasons} saison${show.number_of_seasons>1?'s':''}`,size:\"small\",color:\"success\"}),/*#__PURE__*/_jsx(Chip,{label:new Date(show.first_air_date).getFullYear(),size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:`${Math.round(show.vote_average*10)/10}/10`,color:\"primary\",size:\"small\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{color:'white',mb:3},children:show.overview}),trailer&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",startIcon:/*#__PURE__*/_jsx(PlayArrowIcon,{}),onClick:handleTrailerClick,size:\"large\",sx:{mb:2},children:\"BANDE ANNONCE\"})]})]})]})}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{py:5},children:[showTrailer&&trailer&&/*#__PURE__*/_jsx(Box,{sx:{mb:5,position:'relative',paddingTop:'56.25%',width:'100%'},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{position:'absolute',top:0,left:0,width:'100%',height:'100%',overflow:'hidden',borderRadius:2},children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>setShowTrailer(false),sx:{position:'absolute',top:8,right:8,zIndex:2,color:'white',bgcolor:'rgba(0,0,0,0.6)','&:hover':{bgcolor:'rgba(0,0,0,0.8)'}},children:/*#__PURE__*/_jsx(CloseIcon,{})}),/*#__PURE__*/_jsx(\"iframe\",{width:\"100%\",height:\"100%\",src:`https://www.youtube.com/embed/${trailer}?autoplay=1`,title:\"YouTube video player\",frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true,style:{position:'absolute',top:0,left:0}})]})}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3},children:\"Saisons\"}),/*#__PURE__*/_jsx(Box,{sx:{mb:5},children:seasons.map(season=>/*#__PURE__*/_jsxs(Accordion,{expanded:expandedSeason===season.season_number,onChange:()=>handleSeasonClick(season.season_number),children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":`season${season.season_number}-content`,id:`season${season.season_number}-header`,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(\"img\",{src:season.poster_path?`https://image.tmdb.org/t/p/w92${season.poster_path}`:'https://via.placeholder.com/92x138?text=No+Image',alt:season.name,style:{width:'46px',borderRadius:'4px'}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:season.name}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[season.episode_count,\" \\xE9pisode\",season.episode_count>1?'s':'',\" \\u2022 \",season.air_date&&new Date(season.air_date).getFullYear()]})]})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(List,{children:episodes[season.season_number]?episodes[season.season_number].map(episode=>/*#__PURE__*/_jsx(ListItem,{alignItems:\"flex-start\",sx:{mb:2,borderBottom:'1px solid rgba(0,0,0,0.1)',pb:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,md:2,children:/*#__PURE__*/_jsx(\"img\",{src:episode.still_path?`https://image.tmdb.org/t/p/w300${episode.still_path}`:'https://via.placeholder.com/300x170?text=No+Image',alt:episode.name,style:{width:'100%',borderRadius:'4px'}})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:9,md:10,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[episode.episode_number,\". \",episode.name]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:1},children:[episode.runtime?`${episode.runtime} min • `:'',new Date(episode.air_date).toLocaleDateString()]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:episode.overview||\"Aucun synopsis disponible.\"})]})]})},episode.id)):/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(Typography,{children:\"Chargement des \\xE9pisodes...\"})})})})]},season.id))}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3},children:\"Casting\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,sx:{mb:5},children:cast.map(actor=>/*#__PURE__*/_jsx(Grid,{item:true,xs:6,sm:4,md:3,lg:2,children:/*#__PURE__*/_jsxs(Card,{sx:{height:'100%'},children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",height:\"180\",image:actor.profile_path?`https://image.tmdb.org/t/p/w185${actor.profile_path}`:'https://via.placeholder.com/185x278?text=No+Image',alt:actor.name}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",component:\"div\",children:actor.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:actor.character})]})]})},actor.id))}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:3},children:\"Cr\\xE9ateurs et R\\xE9alisation\"}),/*#__PURE__*/_jsx(List,{children:crew.map(member=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{src:member.profile_path?`https://image.tmdb.org/t/p/w45${member.profile_path}`:undefined})}),/*#__PURE__*/_jsx(ListItemText,{primary:member.name,secondary:member.job||'Créateur'})]},`${member.id}-${member.job||'Creator'}`))})]})]});};export default TvDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Container","Typography","Button","Chip","Grid","Card","CardMedia","CardContent","IconButton","Paper","List","ListItem","Avatar","ListItemAvatar","ListItemText","Accordion","AccordionSummary","AccordionDetails","CloseIcon","PlayArrowIcon","ExpandMoreIcon","axios","jsx","_jsx","jsxs","_jsxs","TvDetail","id","navigate","show","setShow","cast","setCast","crew","setCrew","trailer","setTrailer","seasons","setSeasons","expandedSeason","setExpandedSeason","episodes","setEpisodes","showTrailer","setShowTrailer","loading","setLoading","fetchTvDetails","showResponse","get","process","env","REACT_APP_TMDB_API_KEY","creditsResponse","videosResponse","data","filter","s","season_number","slice","creators","created_by","writers","member","department","job","directors","producers","uniqueCrewIds","Set","uniqueCrew","has","add","trailers","results","video","type","site","length","key","error","console","fetchSeasonEpisodes","seasonNumber","response","prev","handleSeasonClick","handleClose","handleTrailerClick","sx","display","justifyContent","p","children","position","height","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","alignItems","maxWidth","onClick","top","right","color","bgcolor","container","spacing","item","xs","md","src","poster_path","alt","name","style","width","borderRadius","boxShadow","variant","mb","flexWrap","gap","genres","map","genre","label","size","number_of_seasons","Date","first_air_date","getFullYear","Math","round","vote_average","overview","startIcon","py","paddingTop","elevation","left","overflow","zIndex","title","frameBorder","allow","allowFullScreen","season","expanded","onChange","expandIcon","episode_count","air_date","episode","borderBottom","pb","sm","still_path","episode_number","runtime","toLocaleDateString","actor","lg","component","image","profile_path","character","undefined","primary","secondary"],"sources":["C:/Users/franc/Html_App/movie-flex-v1/src/pages/TvDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box, Container, Typography, Button, Chip, Grid, Card, CardMedia, \r\n  CardContent, IconButton, Paper, List, ListItem, Avatar, \r\n  ListItemAvatar, ListItemText, Accordion, AccordionSummary, AccordionDetails\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport axios from 'axios';\r\n\r\nconst TvDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [show, setShow] = useState<any>(null);\r\n  const [cast, setCast] = useState<any[]>([]);\r\n  const [crew, setCrew] = useState<any[]>([]);\r\n  const [trailer, setTrailer] = useState<string | null>(null);\r\n  const [seasons, setSeasons] = useState<any[]>([]);\r\n  const [expandedSeason, setExpandedSeason] = useState<number | null>(null);\r\n  const [episodes, setEpisodes] = useState<{ [key: number]: any[] }>({});\r\n  const [showTrailer, setShowTrailer] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTvDetails = async () => {\r\n      try {\r\n        // Récupérer les détails de la série\r\n        const showResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        // Récupérer le casting et l'équipe\r\n        const creditsResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        // Récupérer les vidéos (bande-annonce)\r\n        const videosResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        \r\n        setShow(showResponse.data);\r\n        setSeasons(showResponse.data.seasons.filter((s: any) => s.season_number > 0));\r\n        setCast(creditsResponse.data.cast.slice(0, 10)); // Limiter à 10 acteurs\r\n        \r\n        // Filtrer pour obtenir les créateurs, producteurs, scénaristes\r\n        const creators = showResponse.data.created_by || [];\r\n        const writers = creditsResponse.data.crew.filter((member: any) => \r\n          member.department === \"Writing\" || member.job === \"Writer\"\r\n        );\r\n        const directors = creditsResponse.data.crew.filter((member: any) => \r\n          member.job === \"Director\" || member.department === \"Directing\"\r\n        );\r\n        const producers = creditsResponse.data.crew.filter((member: any) => \r\n          member.job === \"Producer\" || member.job === \"Executive Producer\"\r\n        );\r\n        \r\n        // Combine and deduplicate crew members\r\n        const uniqueCrewIds = new Set();\r\n        const uniqueCrew = [...creators, ...directors.slice(0, 2), ...writers.slice(0, 2), ...producers.slice(0, 2)]\r\n          .filter(member => {\r\n            if (uniqueCrewIds.has(member.id)) return false;\r\n            uniqueCrewIds.add(member.id);\r\n            return true;\r\n          });\r\n        \r\n        setCrew(uniqueCrew);\r\n        \r\n        // Récupérer la bande-annonce\r\n        const trailers = videosResponse.data.results.filter((video: any) => \r\n          video.type === \"Trailer\" && (video.site === \"YouTube\" || video.site === \"Vimeo\")\r\n        );\r\n        \r\n        if (trailers.length > 0) {\r\n          setTrailer(trailers[0].key);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching TV show details:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTvDetails();\r\n  }, [id]);\r\n  \r\n\r\n  const fetchSeasonEpisodes = async (seasonNumber: number) => {\r\n    if (episodes[seasonNumber]) {\r\n      return; // Déjà chargé\r\n    }\r\n    \r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/tv/${id}/season/${seasonNumber}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n      );\r\n      \r\n      setEpisodes(prev => ({\r\n        ...prev,\r\n        [seasonNumber]: response.data.episodes\r\n      }));\r\n    } catch (error) {\r\n      console.error(`Error fetching season ${seasonNumber} episodes:`, error);\r\n    }\r\n  };\r\n  \r\n  const handleSeasonClick = (seasonNumber: number) => {\r\n    if (expandedSeason === seasonNumber) {\r\n      setExpandedSeason(null); // Ferme l'accordéon si déjà ouvert\r\n    } else {\r\n      setExpandedSeason(seasonNumber);\r\n      fetchSeasonEpisodes(seasonNumber);\r\n    }\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    navigate(-1);\r\n  };\r\n  \r\n  const handleTrailerClick = () => {\r\n    setShowTrailer(true);\r\n  };\r\n  \r\n  if (loading || !show) {\r\n    return <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>Chargement...</Box>;\r\n  }\r\n  \r\n  return (\r\n    <Box>\r\n      {/* En-tête avec image de fond */}\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          height: '50vh',\r\n          backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8)), url(https://image.tmdb.org/t/p/original${show.backdrop_path})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <IconButton \r\n            onClick={handleClose}\r\n            sx={{ \r\n              position: 'absolute', \r\n              top: 16, \r\n              right: 16, \r\n              color: 'white',\r\n              bgcolor: 'rgba(0,0,0,0.5)',\r\n              '&:hover': { bgcolor: 'rgba(255,255,255,0.2)' }\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          \r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={4}>\r\n              <img \r\n                src={`https://image.tmdb.org/t/p/w500${show.poster_path}`}\r\n                alt={show.name}\r\n                style={{ \r\n                  width: '100%', \r\n                  maxWidth: '300px',\r\n                  borderRadius: '8px',\r\n                  boxShadow: '0 8px 16px rgba(0,0,0,0.3)'\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={8}>\r\n              <Typography variant=\"h3\" sx={{ color: 'white', mb: 2 }}>\r\n                {show.name}\r\n              </Typography>\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                {show.genres.map((genre: any) => (\r\n                  <Chip key={genre.id} label={genre.name} size=\"small\" />\r\n                ))}\r\n                <Chip label={`${show.number_of_seasons} saison${show.number_of_seasons > 1 ? 's' : ''}`} size=\"small\" color=\"success\" />\r\n                <Chip label={new Date(show.first_air_date).getFullYear()} size=\"small\" />\r\n                <Chip label={`${Math.round(show.vote_average * 10) / 10}/10`} color=\"primary\" size=\"small\" />\r\n              </Box>\r\n              \r\n              <Typography variant=\"body1\" sx={{ color: 'white', mb: 3 }}>\r\n                {show.overview}\r\n              </Typography>\r\n              \r\n              {trailer && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  startIcon={<PlayArrowIcon />}\r\n                  onClick={handleTrailerClick}\r\n                  size=\"large\"\r\n                  sx={{ mb: 2 }}\r\n                >\r\n                  BANDE ANNONCE\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\r\n        {/* Affichage du trailer */}\r\n        {showTrailer && trailer && (\r\n          <Box sx={{ mb: 5, position: 'relative', paddingTop: '56.25%', width: '100%' }}>\r\n            <Paper \r\n              elevation={3} \r\n              sx={{ \r\n                position: 'absolute', \r\n                top: 0, \r\n                left: 0, \r\n                width: '100%', \r\n                height: '100%',\r\n                overflow: 'hidden',\r\n                borderRadius: 2\r\n              }}\r\n            >\r\n              <IconButton \r\n                onClick={() => setShowTrailer(false)}\r\n                sx={{ \r\n                  position: 'absolute', \r\n                  top: 8, \r\n                  right: 8, \r\n                  zIndex: 2,\r\n                  color: 'white',\r\n                  bgcolor: 'rgba(0,0,0,0.6)',\r\n                  '&:hover': { bgcolor: 'rgba(0,0,0,0.8)' }\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <iframe\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                src={`https://www.youtube.com/embed/${trailer}?autoplay=1`}\r\n                title=\"YouTube video player\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                style={{ position: 'absolute', top: 0, left: 0 }}\r\n              />\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Saisons */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Saisons</Typography>\r\n        <Box sx={{ mb: 5 }}>\r\n          {seasons.map((season) => (\r\n            <Accordion \r\n              key={season.id}\r\n              expanded={expandedSeason === season.season_number}\r\n              onChange={() => handleSeasonClick(season.season_number)}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={`season${season.season_number}-content`}\r\n                id={`season${season.season_number}-header`}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                  <img \r\n                    src={\r\n                      season.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w92${season.poster_path}`\r\n                        : 'https://via.placeholder.com/92x138?text=No+Image'\r\n                    }\r\n                    alt={season.name}\r\n                    style={{ width: '46px', borderRadius: '4px' }}\r\n                  />\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\">{season.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {season.episode_count} épisode{season.episode_count > 1 ? 's' : ''} • {season.air_date && new Date(season.air_date).getFullYear()}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <List>\r\n                  {episodes[season.season_number] ? (\r\n                    episodes[season.season_number].map((episode) => (\r\n                      <ListItem key={episode.id} alignItems=\"flex-start\" sx={{ mb: 2, borderBottom: '1px solid rgba(0,0,0,0.1)', pb: 2 }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={3} md={2}>\r\n                            <img \r\n                              src={\r\n                                episode.still_path\r\n                                  ? `https://image.tmdb.org/t/p/w300${episode.still_path}`\r\n                                  : 'https://via.placeholder.com/300x170?text=No+Image'\r\n                              }\r\n                              alt={episode.name}\r\n                              style={{ width: '100%', borderRadius: '4px' }}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={9} md={10}>\r\n                            <Typography variant=\"subtitle1\">\r\n                              {episode.episode_number}. {episode.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                              {episode.runtime ? `${episode.runtime} min • ` : ''}{new Date(episode.air_date).toLocaleDateString()}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                              {episode.overview || \"Aucun synopsis disponible.\"}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                    ))\r\n                  ) : (\r\n                    <ListItem>\r\n                      <Typography>Chargement des épisodes...</Typography>\r\n                    </ListItem>\r\n                  )}\r\n                </List>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Box>\r\n        \r\n        {/* Casting */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Casting</Typography>\r\n        <Grid container spacing={2} sx={{ mb: 5 }}>\r\n          {cast.map((actor) => (\r\n            <Grid item key={actor.id} xs={6} sm={4} md={3} lg={2}>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"180\"\r\n                  image={\r\n                    actor.profile_path\r\n                      ? `https://image.tmdb.org/t/p/w185${actor.profile_path}`\r\n                      : 'https://via.placeholder.com/185x278?text=No+Image'\r\n                  }\r\n                  alt={actor.name}\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle2\" component=\"div\">\r\n                    {actor.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {actor.character}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        \r\n        {/* Équipe de réalisation */}\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Créateurs et Réalisation</Typography>\r\n        <List>\r\n          {crew.map((member) => (\r\n            <ListItem key={`${member.id}-${member.job || 'Creator'}`}>\r\n              <ListItemAvatar>\r\n                <Avatar \r\n                  src={\r\n                    member.profile_path\r\n                      ? `https://image.tmdb.org/t/p/w45${member.profile_path}`\r\n                      : undefined\r\n                  }\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText \r\n                primary={member.name}\r\n                secondary={member.job || 'Créateur'}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TvDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}