{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Html_App\\\\movie-flex-v1\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Container } from '@mui/material';\nimport axios from 'axios';\nimport Hero from '../components/Hero';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [featuredMovie, setFeaturedMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchDiscoverMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`);\n        const movies = response.data.results;\n        // Sélectionner un film aléatoire\n        const randomIndex = Math.floor(Math.random() * movies.length);\n        setFeaturedMovie(movies[randomIndex]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching discover movies:', error);\n        setLoading(false);\n      }\n    };\n    fetchDiscoverMovies();\n  }, []);\n  if (loading || !featuredMovie) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 5\n      },\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      title: featuredMovie.title,\n      backdrop_path: featuredMovie.backdrop_path,\n      overview: featuredMovie.overview,\n      release_date: featuredMovie.release_date,\n      origin_country: ['FR'] // Par défaut, l'API ne fournit pas toujours cette information\n      ,\n      popularity: featuredMovie.popularity,\n      adult: featuredMovie.adult,\n      isMovie: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3\n        },\n        children: \"Films populaires\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          my: 3\n        },\n        children: \"S\\xE9ries tendances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"PHrxjABaseb2dp7wwg8QIMbVS10=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Container","axios","Hero","jsxDEV","_jsxDEV","Home","_s","featuredMovie","setFeaturedMovie","loading","setLoading","fetchDiscoverMovies","response","get","process","env","REACT_APP_TMDB_API_KEY","movies","data","results","randomIndex","Math","floor","random","length","error","console","sx","display","justifyContent","p","children","fileName","_jsxFileName","lineNumber","columnNumber","title","backdrop_path","overview","release_date","origin_country","popularity","adult","isMovie","maxWidth","py","variant","mb","my","_c","$RefreshReg$"],"sources":["C:/Users/franc/Html_App/movie-flex-v1/src/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Container } from '@mui/material';\r\nimport axios from 'axios';\r\nimport Hero from '../components/Hero';\r\n\r\nconst Home: React.FC = () => {\r\n  const [featuredMovie, setFeaturedMovie] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDiscoverMovies = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=fr-FR`\r\n        );\r\n        const movies = response.data.results;\r\n        // Sélectionner un film aléatoire\r\n        const randomIndex = Math.floor(Math.random() * movies.length);\r\n        setFeaturedMovie(movies[randomIndex]);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching discover movies:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDiscoverMovies();\r\n  }, []);\r\n\r\n  if (loading || !featuredMovie) {\r\n    return <Box sx={{ display: 'flex', justifyContent: 'center', p: 5 }}>Chargement...</Box>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Hero\r\n        title={featuredMovie.title}\r\n        backdrop_path={featuredMovie.backdrop_path}\r\n        overview={featuredMovie.overview}\r\n        release_date={featuredMovie.release_date}\r\n        origin_country={['FR']} // Par défaut, l'API ne fournit pas toujours cette information\r\n        popularity={featuredMovie.popularity}\r\n        adult={featuredMovie.adult}\r\n        isMovie={true}\r\n      />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 5 }}>\r\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Films populaires</Typography>\r\n        {/* Ajouter ici la liste de films populaires */}\r\n        \r\n        <Typography variant=\"h4\" sx={{ my: 3 }}>Séries tendances</Typography>\r\n        {/* Ajouter ici la liste de séries tendances */}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}